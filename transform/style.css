/* warning si estableces varias propiedades transform en el mismo elemento con diferentes 
funciones de transformación, siguiendo la herencia y cascada que se aplica siempre en cualquier propiedad CSS, 
la segunda propiedad transform sobreescribirá a la anterior propiedad transform, perdiendo el valor de la primera y 
aplicando sólo el de la segunda ejemplo: */

.element {
  transform: rotate(5deg);  /* No hace efecto */
  transform: scale(2);      /* Sobreescribe la anterior */
}

/* Para evitar este comportamiento, se pueden emplear múltiples transformaciones separándolas mediante espacio */

/* .box {
  width: 200px;
  height: 200px;
  transition-property: transform;
  transition-duration: 2s;
} */
/* ejemplo para no sobreescribir la propiedad transform: */
/* .box:hover {
  border-radius: 50%;
  background-color: red;
  transform: translate(300px, 300px) rotate(90deg) scale(2.2) skew( 20deg, 20deg);
} */

/* ejemplo usando rotate con rad */

/* .box {
  width: 200px;
  height: 200px;
  background-color: blue;
  transition-property: transform, border-radius, background-color;
  transition: 3s;
} */
/* Rota 90 grados en sentido horario */
/* .box:hover {
  background-color: green;
  border-radius: 50%;
  transform: rotate(1.5708rad); 
} */

/* ejemplo usando matrix */

.box {
  width: 200px;
  height: 200px;
  background-color: blue;
  transition: transform 0.5s;
}

.box:hover {
  transform: matrix(2, 0.5, -0.5, 2, 200, 300);
}